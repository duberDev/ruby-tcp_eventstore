# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientMessageDtos-v3.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "protobuf.NewEvent" do
    optional :event_id, :bytes, 1
    optional :event_type, :string, 2
    optional :data_content_type, :int32, 3
    optional :metadata_content_type, :int32, 4
    optional :data, :bytes, 5
    optional :metadata, :bytes, 6
  end
  add_message "protobuf.EventRecord" do
    optional :event_stream_id, :string, 1
    optional :event_number, :int32, 2
    optional :event_id, :bytes, 3
    optional :event_type, :string, 4
    optional :data_content_type, :int32, 5
    optional :metadata_content_type, :int32, 6
    optional :data, :bytes, 7
    optional :metadata, :bytes, 8
    optional :created, :int64, 9
    optional :created_epoch, :int64, 10
  end
  add_message "protobuf.ResolvedIndexedEvent" do
    optional :event, :message, 1, "protobuf.EventRecord"
    optional :link, :message, 2, "protobuf.EventRecord"
  end
  add_message "protobuf.ResolvedEvent" do
    optional :event, :message, 1, "protobuf.EventRecord"
    optional :link, :message, 2, "protobuf.EventRecord"
    optional :commit_position, :int64, 3
    optional :prepare_position, :int64, 4
  end
  add_message "protobuf.WriteEvents" do
    optional :event_stream_id, :string, 1
    optional :expected_version, :int32, 2
    repeated :events, :message, 3, "protobuf.NewEvent"
    optional :require_master, :bool, 4
  end
  add_message "protobuf.WriteEventsCompleted" do
    optional :result, :enum, 1, "protobuf.OperationResult"
    optional :message, :string, 2
    optional :first_event_number, :int32, 3
    optional :last_event_number, :int32, 4
    optional :prepare_position, :int64, 5
    optional :commit_position, :int64, 6
  end
  add_message "protobuf.DeleteStream" do
    optional :event_stream_id, :string, 1
    optional :expected_version, :int32, 2
    optional :require_master, :bool, 3
    optional :hard_delete, :bool, 4
  end
  add_message "protobuf.DeleteStreamCompleted" do
    optional :result, :enum, 1, "protobuf.OperationResult"
    optional :message, :string, 2
    optional :prepare_position, :int64, 3
    optional :commit_position, :int64, 4
  end
  add_message "protobuf.TransactionStart" do
    optional :event_stream_id, :string, 1
    optional :expected_version, :int32, 2
    optional :require_master, :bool, 3
  end
  add_message "protobuf.TransactionStartCompleted" do
    optional :transaction_id, :int64, 1
    optional :result, :enum, 2, "protobuf.OperationResult"
    optional :message, :string, 3
  end
  add_message "protobuf.TransactionWrite" do
    optional :transaction_id, :int64, 1
    repeated :events, :message, 2, "protobuf.NewEvent"
    optional :require_master, :bool, 3
  end
  add_message "protobuf.TransactionWriteCompleted" do
    optional :transaction_id, :int64, 1
    optional :result, :enum, 2, "protobuf.OperationResult"
    optional :message, :string, 3
  end
  add_message "protobuf.TransactionCommit" do
    optional :transaction_id, :int64, 1
    optional :require_master, :bool, 2
  end
  add_message "protobuf.TransactionCommitCompleted" do
    optional :transaction_id, :int64, 1
    optional :result, :enum, 2, "protobuf.OperationResult"
    optional :message, :string, 3
    optional :first_event_number, :int32, 4
    optional :last_event_number, :int32, 5
    optional :prepare_position, :int64, 6
    optional :commit_position, :int64, 7
  end
  add_message "protobuf.ReadEvent" do
    optional :event_stream_id, :string, 1
    optional :event_number, :int32, 2
    optional :resolve_link_tos, :bool, 3
    optional :require_master, :bool, 4
  end
  add_message "protobuf.ReadEventCompleted" do
    optional :result, :enum, 1, "protobuf.ReadEventCompleted.ReadEventResult"
    optional :event, :message, 2, "protobuf.ResolvedIndexedEvent"
    optional :error, :string, 3
  end
  add_enum "protobuf.ReadEventCompleted.ReadEventResult" do
    value :Success, 0
    value :NotFound, 1
    value :NoStream, 2
    value :StreamDeleted, 3
    value :Error, 4
    value :AccessDenied, 5
  end
  add_message "protobuf.ReadStreamEvents" do
    optional :event_stream_id, :string, 1
    optional :from_event_number, :int32, 2
    optional :max_count, :int32, 3
    optional :resolve_link_tos, :bool, 4
    optional :require_master, :bool, 5
  end
  add_message "protobuf.ReadStreamEventsCompleted" do
    repeated :events, :message, 1, "protobuf.ResolvedIndexedEvent"
    optional :result, :enum, 2, "protobuf.ReadStreamEventsCompleted.ReadStreamResult"
    optional :next_event_number, :int32, 3
    optional :last_event_number, :int32, 4
    optional :is_end_of_stream, :bool, 5
    optional :last_commit_position, :int64, 6
    optional :error, :string, 7
  end
  add_enum "protobuf.ReadStreamEventsCompleted.ReadStreamResult" do
    value :Success, 0
    value :NoStream, 1
    value :StreamDeleted, 2
    value :NotModified, 3
    value :Error, 4
    value :AccessDenied, 5
  end
  add_message "protobuf.ReadAllEvents" do
    optional :commit_position, :int64, 1
    optional :prepare_position, :int64, 2
    optional :max_count, :int32, 3
    optional :resolve_link_tos, :bool, 4
    optional :require_master, :bool, 5
  end
  add_message "protobuf.ReadAllEventsCompleted" do
    optional :commit_position, :int64, 1
    optional :prepare_position, :int64, 2
    repeated :events, :message, 3, "protobuf.ResolvedEvent"
    optional :next_commit_position, :int64, 4
    optional :next_prepare_position, :int64, 5
    optional :result, :enum, 6, "protobuf.ReadAllEventsCompleted.ReadAllResult"
    optional :error, :string, 7
  end
  add_enum "protobuf.ReadAllEventsCompleted.ReadAllResult" do
    value :Success, 0
    value :NotModified, 1
    value :Error, 2
    value :AccessDenied, 3
  end
  add_message "protobuf.CreatePersistentSubscription" do
    optional :subscription_group_name, :string, 1
    optional :event_stream_id, :string, 2
    optional :resolve_link_tos, :bool, 3
    optional :start_from, :int32, 4
    optional :message_timeout_milliseconds, :int32, 5
    optional :record_statistics, :bool, 6
    optional :live_buffer_size, :int32, 7
    optional :read_batch_size, :int32, 8
    optional :buffer_size, :int32, 9
    optional :max_retry_count, :int32, 10
    optional :prefer_round_robin, :bool, 11
    optional :checkpoint_after_time, :int32, 12
    optional :checkpoint_max_count, :int32, 13
    optional :checkpoint_min_count, :int32, 14
    optional :subscriber_max_count, :int32, 15
    optional :named_consumer_strategy, :string, 16
  end
  add_message "protobuf.DeletePersistentSubscription" do
    optional :subscription_group_name, :string, 1
    optional :event_stream_id, :string, 2
  end
  add_message "protobuf.UpdatePersistentSubscription" do
    optional :subscription_group_name, :string, 1
    optional :event_stream_id, :string, 2
    optional :resolve_link_tos, :bool, 3
    optional :start_from, :int32, 4
    optional :message_timeout_milliseconds, :int32, 5
    optional :record_statistics, :bool, 6
    optional :live_buffer_size, :int32, 7
    optional :read_batch_size, :int32, 8
    optional :buffer_size, :int32, 9
    optional :max_retry_count, :int32, 10
    optional :prefer_round_robin, :bool, 11
    optional :checkpoint_after_time, :int32, 12
    optional :checkpoint_max_count, :int32, 13
    optional :checkpoint_min_count, :int32, 14
    optional :subscriber_max_count, :int32, 15
    optional :named_consumer_strategy, :string, 16
  end
  add_message "protobuf.UpdatePersistentSubscriptionCompleted" do
    optional :result, :enum, 1, "protobuf.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult"
    optional :reason, :string, 2
  end
  add_enum "protobuf.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult" do
    value :Success, 0
    value :DoesNotExist, 1
    value :Fail, 2
    value :AccessDenied, 3
  end
  add_message "protobuf.CreatePersistentSubscriptionCompleted" do
    optional :result, :enum, 1, "protobuf.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult"
    optional :reason, :string, 2
  end
  add_enum "protobuf.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult" do
    value :Success, 0
    value :AlreadyExists, 1
    value :Fail, 2
    value :AccessDenied, 3
  end
  add_message "protobuf.DeletePersistentSubscriptionCompleted" do
    optional :result, :enum, 1, "protobuf.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult"
    optional :reason, :string, 2
  end
  add_enum "protobuf.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult" do
    value :Success, 0
    value :DoesNotExist, 1
    value :Fail, 2
    value :AccessDenied, 3
  end
  add_message "protobuf.ConnectToPersistentSubscription" do
    optional :subscription_id, :string, 1
    optional :event_stream_id, :string, 2
    optional :allowed_in_flight_messages, :int32, 3
  end
  add_message "protobuf.PersistentSubscriptionAckEvents" do
    optional :subscription_id, :string, 1
    repeated :processed_event_ids, :bytes, 2
  end
  add_message "protobuf.PersistentSubscriptionNakEvents" do
    optional :subscription_id, :string, 1
    repeated :processed_event_ids, :bytes, 2
    optional :message, :string, 3
    optional :action, :enum, 4, "protobuf.PersistentSubscriptionNakEvents.NakAction"
  end
  add_enum "protobuf.PersistentSubscriptionNakEvents.NakAction" do
    value :Unknown, 0
    value :Park, 1
    value :Retry, 2
    value :Skip, 3
    value :Stop, 4
  end
  add_message "protobuf.PersistentSubscriptionConfirmation" do
    optional :last_commit_position, :int64, 1
    optional :subscription_id, :string, 2
    optional :last_event_number, :int32, 3
  end
  add_message "protobuf.PersistentSubscriptionStreamEventAppeared" do
    optional :event, :message, 1, "protobuf.ResolvedIndexedEvent"
  end
  add_message "protobuf.SubscribeToStream" do
    optional :event_stream_id, :string, 1
    optional :resolve_link_tos, :bool, 2
  end
  add_message "protobuf.SubscriptionConfirmation" do
    optional :last_commit_position, :int64, 1
    optional :last_event_number, :int32, 2
  end
  add_message "protobuf.StreamEventAppeared" do
    optional :event, :message, 1, "protobuf.ResolvedEvent"
  end
  add_message "protobuf.UnsubscribeFromStream" do
  end
  add_message "protobuf.SubscriptionDropped" do
    optional :reason, :enum, 1, "protobuf.SubscriptionDropped.SubscriptionDropReason"
  end
  add_enum "protobuf.SubscriptionDropped.SubscriptionDropReason" do
    value :Unsubscribed, 0
    value :AccessDenied, 1
    value :NotFound, 2
    value :PersistentSubscriptionDeleted, 3
    value :SubscriberMaxCountReached, 4
  end
  add_message "protobuf.NotHandled" do
    optional :reason, :enum, 1, "protobuf.NotHandled.NotHandledReason"
    optional :additional_info, :bytes, 2
  end
  add_message "protobuf.NotHandled.MasterInfo" do
    optional :external_tcp_address, :string, 1
    optional :external_tcp_port, :int32, 2
    optional :external_http_address, :string, 3
    optional :external_http_port, :int32, 4
    optional :external_secure_tcp_address, :string, 5
    optional :external_secure_tcp_port, :int32, 6
  end
  add_enum "protobuf.NotHandled.NotHandledReason" do
    value :NotReady, 0
    value :TooBusy, 1
    value :NotMaster, 2
  end
  add_message "protobuf.ScavengeDatabase" do
  end
  add_message "protobuf.ScavengeDatabaseCompleted" do
    optional :result, :enum, 1, "protobuf.ScavengeDatabaseCompleted.ScavengeResult"
    optional :error, :string, 2
    optional :total_time_ms, :int32, 3
    optional :total_space_saved, :int64, 4
  end
  add_enum "protobuf.ScavengeDatabaseCompleted.ScavengeResult" do
    value :Success, 0
    value :InProgress, 1
    value :Failed, 2
  end
  add_enum "protobuf.OperationResult" do
    value :Success, 0
    value :PrepareTimeout, 1
    value :CommitTimeout, 2
    value :ForwardTimeout, 3
    value :WrongExpectedVersion, 4
    value :StreamDeleted, 5
    value :InvalidTransaction, 6
    value :AccessDenied, 7
  end
end

module Protobuf
  NewEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.NewEvent").msgclass
  EventRecord = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.EventRecord").msgclass
  ResolvedIndexedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ResolvedIndexedEvent").msgclass
  ResolvedEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ResolvedEvent").msgclass
  WriteEvents = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.WriteEvents").msgclass
  WriteEventsCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.WriteEventsCompleted").msgclass
  DeleteStream = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.DeleteStream").msgclass
  DeleteStreamCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.DeleteStreamCompleted").msgclass
  TransactionStart = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.TransactionStart").msgclass
  TransactionStartCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.TransactionStartCompleted").msgclass
  TransactionWrite = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.TransactionWrite").msgclass
  TransactionWriteCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.TransactionWriteCompleted").msgclass
  TransactionCommit = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.TransactionCommit").msgclass
  TransactionCommitCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.TransactionCommitCompleted").msgclass
  ReadEvent = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadEvent").msgclass
  ReadEventCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadEventCompleted").msgclass
  ReadEventCompleted::ReadEventResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadEventCompleted.ReadEventResult").enummodule
  ReadStreamEvents = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadStreamEvents").msgclass
  ReadStreamEventsCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadStreamEventsCompleted").msgclass
  ReadStreamEventsCompleted::ReadStreamResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadStreamEventsCompleted.ReadStreamResult").enummodule
  ReadAllEvents = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadAllEvents").msgclass
  ReadAllEventsCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadAllEventsCompleted").msgclass
  ReadAllEventsCompleted::ReadAllResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ReadAllEventsCompleted.ReadAllResult").enummodule
  CreatePersistentSubscription = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.CreatePersistentSubscription").msgclass
  DeletePersistentSubscription = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.DeletePersistentSubscription").msgclass
  UpdatePersistentSubscription = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.UpdatePersistentSubscription").msgclass
  UpdatePersistentSubscriptionCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.UpdatePersistentSubscriptionCompleted").msgclass
  UpdatePersistentSubscriptionCompleted::UpdatePersistentSubscriptionResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult").enummodule
  CreatePersistentSubscriptionCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.CreatePersistentSubscriptionCompleted").msgclass
  CreatePersistentSubscriptionCompleted::CreatePersistentSubscriptionResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult").enummodule
  DeletePersistentSubscriptionCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.DeletePersistentSubscriptionCompleted").msgclass
  DeletePersistentSubscriptionCompleted::DeletePersistentSubscriptionResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult").enummodule
  ConnectToPersistentSubscription = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ConnectToPersistentSubscription").msgclass
  PersistentSubscriptionAckEvents = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.PersistentSubscriptionAckEvents").msgclass
  PersistentSubscriptionNakEvents = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.PersistentSubscriptionNakEvents").msgclass
  PersistentSubscriptionNakEvents::NakAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.PersistentSubscriptionNakEvents.NakAction").enummodule
  PersistentSubscriptionConfirmation = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.PersistentSubscriptionConfirmation").msgclass
  PersistentSubscriptionStreamEventAppeared = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.PersistentSubscriptionStreamEventAppeared").msgclass
  SubscribeToStream = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.SubscribeToStream").msgclass
  SubscriptionConfirmation = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.SubscriptionConfirmation").msgclass
  StreamEventAppeared = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.StreamEventAppeared").msgclass
  UnsubscribeFromStream = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.UnsubscribeFromStream").msgclass
  SubscriptionDropped = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.SubscriptionDropped").msgclass
  SubscriptionDropped::SubscriptionDropReason = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.SubscriptionDropped.SubscriptionDropReason").enummodule
  NotHandled = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.NotHandled").msgclass
  NotHandled::MasterInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.NotHandled.MasterInfo").msgclass
  NotHandled::NotHandledReason = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.NotHandled.NotHandledReason").enummodule
  ScavengeDatabase = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ScavengeDatabase").msgclass
  ScavengeDatabaseCompleted = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ScavengeDatabaseCompleted").msgclass
  ScavengeDatabaseCompleted::ScavengeResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.ScavengeDatabaseCompleted.ScavengeResult").enummodule
  OperationResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("protobuf.OperationResult").enummodule
end
